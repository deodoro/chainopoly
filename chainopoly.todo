Chainopoly:
  ✔ game.w3.service @code @done (18-12-27 14:29)
  ✔ opponent.w3.service @code @done (18-12-26 23:47)
  ✔ player.w3.service @code @done (18-12-26 18:35)
  ✔ refactor events @code @done (18-12-29 11:16)
    on(evt, e => handler(e))?
    .subscribe?
    read game info from game service
    read player info from player service
  ☐ redraw interface
    ☐ new mechanisms for game engine
      draw dice for all players
      add notification from swap to game
      create offers and invoices for round
      once all pending items are cleared, new players are added, next round is started
    ✔ service to list pending offers/invoices @done (19-01-02 17:25)
    ☐ decline offer form
    ✔ service for listing assets @done (19-01-02 17:25)
    ☐ bottom sheet in asset list
    ☐ load transaction history
    ☐ hook transfer service
    ☐ flag owned items in map (hidden flag?)
    ☐ generate stats from game info
      write ranking service (list players and decide client side)
    ☐ click on highlighted (own) items leads to transfer
    ✔ unregister service @done (19-01-02 17:25)
    ☐ terminate game on players leaving
    ☐ review color scheme
      mixin for property colors?
    ✔ add property color bubble to asset list @done (19-01-02 17:25)
    ✔ add property color bubble to offers pending (dashboard) @done (19-01-02 18:08)
    ☐ calculate asset total price
    ☐ check if fixed header is feasible
    ☐ detect non registered game and go to /start if so
    ☐ on successful transfer, go to the bottom, show "waiting" message and highlight transfer
    ☐ remove pending actions from players that leave
  ☐ Fix production build
  ☐ show grid
    Zoom to populated squares [min(x, y), max(x,y)]
  ☐ name per account @maybe
  ☐ reset on game or wallet change
  ☐ news -> chat window
  ☐ detect if network is unreachable/down @code
  ✔ notifications history (interface) @code @done (19-01-02 11:41)
  ✔ clear notification history @code @done (19-01-02 11:41)
  ☐ refactor contract ownership (resetTo) @code
  ✔ code new interface @code @done (19-01-02 11:41)
  ☐ CPU player @code
  ☐ refactor service configuration @code
  ✔ game instatialization @code @done (19-01-02 11:40)
  ☐ add comments
  ☐ "production" network
  ☐ calculate price
  ☐ webhosting
  ☐ narrative
  ☐ find new name
  ☐ send links
  ✔ user may transfer at any time @later @done (19-01-02 11:40)
  ☐ may everyone know everybody else's balance? @later
  ☐ chat @later @code
    news and messages in the same list (news = bot messages)
  ☐ buy houses and hotels @later
    user calls transfer(credits, token_id, 'house') to atomic swap, bank is notified and sells the house
    How to represent house? Another token? Update token attribute?

